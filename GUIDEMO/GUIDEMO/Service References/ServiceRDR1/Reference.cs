//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GUIDEMO.ServiceRDR1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceRDR1.IServiceRDR1")]
    public interface IServiceRDR1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/showRDR1", ReplyAction="http://tempuri.org/IServiceRDR1/showRDR1Response")]
        System.Data.DataTable showRDR1();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/showRDR1", ReplyAction="http://tempuri.org/IServiceRDR1/showRDR1Response")]
        System.Threading.Tasks.Task<System.Data.DataTable> showRDR1Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/showRDR1ByDocEntry", ReplyAction="http://tempuri.org/IServiceRDR1/showRDR1ByDocEntryResponse")]
        System.Data.DataTable showRDR1ByDocEntry(int DocEntry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/showRDR1ByDocEntry", ReplyAction="http://tempuri.org/IServiceRDR1/showRDR1ByDocEntryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> showRDR1ByDocEntryAsync(int DocEntry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/addRDR1", ReplyAction="http://tempuri.org/IServiceRDR1/addRDR1Response")]
        string addRDR1(BusinesObject.BO_RDR1 obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/addRDR1", ReplyAction="http://tempuri.org/IServiceRDR1/addRDR1Response")]
        System.Threading.Tasks.Task<string> addRDR1Async(BusinesObject.BO_RDR1 obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/updateRDR1", ReplyAction="http://tempuri.org/IServiceRDR1/updateRDR1Response")]
        string updateRDR1(BusinesObject.BO_RDR1 obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/updateRDR1", ReplyAction="http://tempuri.org/IServiceRDR1/updateRDR1Response")]
        System.Threading.Tasks.Task<string> updateRDR1Async(BusinesObject.BO_RDR1 obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/CheckItemCode", ReplyAction="http://tempuri.org/IServiceRDR1/CheckItemCodeResponse")]
        bool CheckItemCode(string itemCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/CheckItemCode", ReplyAction="http://tempuri.org/IServiceRDR1/CheckItemCodeResponse")]
        System.Threading.Tasks.Task<bool> CheckItemCodeAsync(string itemCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/CheckExistsDocEntryAndLineNum", ReplyAction="http://tempuri.org/IServiceRDR1/CheckExistsDocEntryAndLineNumResponse")]
        bool CheckExistsDocEntryAndLineNum(int idDocEntry, int idLineNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/CheckExistsDocEntryAndLineNum", ReplyAction="http://tempuri.org/IServiceRDR1/CheckExistsDocEntryAndLineNumResponse")]
        System.Threading.Tasks.Task<bool> CheckExistsDocEntryAndLineNumAsync(int idDocEntry, int idLineNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/deleteRDR1", ReplyAction="http://tempuri.org/IServiceRDR1/deleteRDR1Response")]
        string deleteRDR1(int docEntry, int LineNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/deleteRDR1", ReplyAction="http://tempuri.org/IServiceRDR1/deleteRDR1Response")]
        System.Threading.Tasks.Task<string> deleteRDR1Async(int docEntry, int LineNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/GetMaxLineNumByDocEntry", ReplyAction="http://tempuri.org/IServiceRDR1/GetMaxLineNumByDocEntryResponse")]
        int GetMaxLineNumByDocEntry(int docEntry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/GetMaxLineNumByDocEntry", ReplyAction="http://tempuri.org/IServiceRDR1/GetMaxLineNumByDocEntryResponse")]
        System.Threading.Tasks.Task<int> GetMaxLineNumByDocEntryAsync(int docEntry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/SearchRDR1ByDocEntry", ReplyAction="http://tempuri.org/IServiceRDR1/SearchRDR1ByDocEntryResponse")]
        System.Data.DataTable SearchRDR1ByDocEntry(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/SearchRDR1ByDocEntry", ReplyAction="http://tempuri.org/IServiceRDR1/SearchRDR1ByDocEntryResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> SearchRDR1ByDocEntryAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/SearchRDR1ByDocEntryAll", ReplyAction="http://tempuri.org/IServiceRDR1/SearchRDR1ByDocEntryAllResponse")]
        System.Data.DataTable SearchRDR1ByDocEntryAll(string cardCode, string status, string docNum, System.DateTime fDate, System.DateTime tDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceRDR1/SearchRDR1ByDocEntryAll", ReplyAction="http://tempuri.org/IServiceRDR1/SearchRDR1ByDocEntryAllResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> SearchRDR1ByDocEntryAllAsync(string cardCode, string status, string docNum, System.DateTime fDate, System.DateTime tDate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceRDR1Channel : GUIDEMO.ServiceRDR1.IServiceRDR1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceRDR1Client : System.ServiceModel.ClientBase<GUIDEMO.ServiceRDR1.IServiceRDR1>, GUIDEMO.ServiceRDR1.IServiceRDR1 {
        
        public ServiceRDR1Client() {
        }
        
        public ServiceRDR1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceRDR1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceRDR1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceRDR1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable showRDR1() {
            return base.Channel.showRDR1();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> showRDR1Async() {
            return base.Channel.showRDR1Async();
        }
        
        public System.Data.DataTable showRDR1ByDocEntry(int DocEntry) {
            return base.Channel.showRDR1ByDocEntry(DocEntry);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> showRDR1ByDocEntryAsync(int DocEntry) {
            return base.Channel.showRDR1ByDocEntryAsync(DocEntry);
        }
        
        public string addRDR1(BusinesObject.BO_RDR1 obj) {
            return base.Channel.addRDR1(obj);
        }
        
        public System.Threading.Tasks.Task<string> addRDR1Async(BusinesObject.BO_RDR1 obj) {
            return base.Channel.addRDR1Async(obj);
        }
        
        public string updateRDR1(BusinesObject.BO_RDR1 obj) {
            return base.Channel.updateRDR1(obj);
        }
        
        public System.Threading.Tasks.Task<string> updateRDR1Async(BusinesObject.BO_RDR1 obj) {
            return base.Channel.updateRDR1Async(obj);
        }
        
        public bool CheckItemCode(string itemCode) {
            return base.Channel.CheckItemCode(itemCode);
        }
        
        public System.Threading.Tasks.Task<bool> CheckItemCodeAsync(string itemCode) {
            return base.Channel.CheckItemCodeAsync(itemCode);
        }
        
        public bool CheckExistsDocEntryAndLineNum(int idDocEntry, int idLineNum) {
            return base.Channel.CheckExistsDocEntryAndLineNum(idDocEntry, idLineNum);
        }
        
        public System.Threading.Tasks.Task<bool> CheckExistsDocEntryAndLineNumAsync(int idDocEntry, int idLineNum) {
            return base.Channel.CheckExistsDocEntryAndLineNumAsync(idDocEntry, idLineNum);
        }
        
        public string deleteRDR1(int docEntry, int LineNum) {
            return base.Channel.deleteRDR1(docEntry, LineNum);
        }
        
        public System.Threading.Tasks.Task<string> deleteRDR1Async(int docEntry, int LineNum) {
            return base.Channel.deleteRDR1Async(docEntry, LineNum);
        }
        
        public int GetMaxLineNumByDocEntry(int docEntry) {
            return base.Channel.GetMaxLineNumByDocEntry(docEntry);
        }
        
        public System.Threading.Tasks.Task<int> GetMaxLineNumByDocEntryAsync(int docEntry) {
            return base.Channel.GetMaxLineNumByDocEntryAsync(docEntry);
        }
        
        public System.Data.DataTable SearchRDR1ByDocEntry(string key) {
            return base.Channel.SearchRDR1ByDocEntry(key);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SearchRDR1ByDocEntryAsync(string key) {
            return base.Channel.SearchRDR1ByDocEntryAsync(key);
        }
        
        public System.Data.DataTable SearchRDR1ByDocEntryAll(string cardCode, string status, string docNum, System.DateTime fDate, System.DateTime tDate) {
            return base.Channel.SearchRDR1ByDocEntryAll(cardCode, status, docNum, fDate, tDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SearchRDR1ByDocEntryAllAsync(string cardCode, string status, string docNum, System.DateTime fDate, System.DateTime tDate) {
            return base.Channel.SearchRDR1ByDocEntryAllAsync(cardCode, status, docNum, fDate, tDate);
        }
    }
}
